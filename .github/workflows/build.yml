name: build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  upload_assets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Upload Assets
        uses: actions/upload-artifact@v3
        with:
          name: assets
          path: assets/

  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        compiler: [{ cc: gcc, cxx: g++ }, { cc: clang, cxx: clang++ }]
        cmake_build_type: [Release]
    steps:
      - name: Installing Dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install ${{ matrix.compiler.cc }} cmake ninja-build libglu1-mesa-dev mesa-common-dev xorg-dev

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Building Project
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}
        run: |
          cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          cmake --build build

      - name: Uploading Binary
        uses: actions/upload-artifact@v3
        with:
          name: linux-binary
          path: build/Indigo

  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        compiler: [{ cc: clang, cxx: clang++ }]
        build_type: [Release]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Building Project
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}
        run: |
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          cmake --build build

      - name: Uploading Binary
        uses: actions/upload-artifact@v3
        with:
          name: windows-binary
          path: build/Indigo.exe
